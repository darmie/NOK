// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from math.djinni

#pragma once

#include "djinni_support.hpp"
#include "mat3x2_module.hpp"

namespace djinni_generated {

class NativeMat3x2Module final : ::djinni::JniInterface<::nok::Mat3x2Module, NativeMat3x2Module> {
public:
    using CppType = std::shared_ptr<::nok::Mat3x2Module>;
    using CppOptType = std::shared_ptr<::nok::Mat3x2Module>;
    using JniType = jobject;

    using Boxed = NativeMat3x2Module;

    ~NativeMat3x2Module();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeMat3x2Module>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeMat3x2Module>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeMat3x2Module();
    friend ::djinni::JniClass<NativeMat3x2Module>;
    friend ::djinni::JniInterface<::nok::Mat3x2Module, NativeMat3x2Module>;

};

}  // namespace djinni_generated
