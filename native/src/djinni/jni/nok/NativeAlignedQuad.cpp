// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from nok.djinni

#include "NativeAlignedQuad.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeAlignedQuad::NativeAlignedQuad() = default;

NativeAlignedQuad::~NativeAlignedQuad() = default;

auto NativeAlignedQuad::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeAlignedQuad>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.x0)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.y0)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.s0)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.t0)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.x1)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.y1)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.s1)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.t1)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.xadvance)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeAlignedQuad::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeAlignedQuad>::get();
    return {::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mX0)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mY0)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mS0)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mT0)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mX1)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mY1)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mS1)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mT1)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mXadvance))};
}

}  // namespace djinni_generated
