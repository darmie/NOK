// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from nok.djinni

package co.zenturi.nok;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Shader {
    public static Shader create(byte[] data, int length, ShaderType type)
    {
        return CppProxy.create(data,
                               length,
                               type);
    }

    public static Shader createWithSource(String source, ShaderType type)
    {
        return CppProxy.createWithSource(source,
                                         type);
    }

    private static final class CppProxy extends Shader
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        public static native Shader create(byte[] data, int length, ShaderType type);

        public static native Shader createWithSource(String source, ShaderType type);
    }
}
