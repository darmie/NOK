// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from nok.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <vector>

namespace nok {

class VertexStructure;
enum class Usage;

class VertexBuffer {
public:
    virtual ~VertexBuffer() {}

    static std::shared_ptr<VertexBuffer> create(int32_t count, const std::shared_ptr<VertexStructure> & structure, Usage usage, int32_t instanceDataStepRate);

    virtual std::vector<float> lock() = 0;

    virtual void unlock() = 0;

    virtual int32_t count() = 0;

    virtual int32_t stride() = 0;
};

}  // namespace nok
