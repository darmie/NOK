// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from audio.djinni

#pragma once

#include <cstdint>
#include <memory>

namespace nok {

class AudioBuffer;
class AudioChannel;
class Sound;

class Audio1 {
public:
    virtual ~Audio1() {}

    static void init();

    virtual float max(float a, float b) = 0;

    virtual float min(float a, float b) = 0;

    virtual float mix(int32_t samplesBox, const std::shared_ptr<AudioBuffer> & buffer) = 0;

    virtual std::shared_ptr<AudioChannel> play(const std::shared_ptr<Sound> & sound, bool loop) = 0;

    virtual void playAgain(const std::shared_ptr<AudioChannel> & channel) = 0;

    virtual std::shared_ptr<AudioChannel> stream(const std::shared_ptr<Sound> & sound, bool loop) = 0;
};

}  // namespace nok
