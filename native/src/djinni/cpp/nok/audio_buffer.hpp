// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from audio.djinni

#pragma once

#include <cstdint>
#include <vector>

namespace nok {

class AudioBuffer {
public:
    virtual ~AudioBuffer() {}

    static void create(int32_t size, int32_t channels, int32_t samplesPerSecond);

    virtual int32_t get_channels() = 0;

    virtual int32_t get_samplesPerSecond() = 0;

    virtual std::vector<float> get_data() = 0;

    virtual int32_t get_size() = 0;

    virtual int32_t get_readLocation() = 0;

    virtual int32_t get_writeLocation() = 0;

    virtual void set_channels(int32_t channels) = 0;

    virtual void set_samplesPerSecond(int32_t samples) = 0;

    virtual void set_data(const std::vector<float> & data) = 0;

    virtual void set_size(int32_t s) = 0;

    virtual void set_readLocation(int32_t loc) = 0;

    virtual void set_writeLocation(int32_t loc) = 0;
};

}  // namespace nok
